package vk

// ATTACHMENT_UNUSED wraps VK_ATTACHMENT_UNUSED.
const ATTACHMENT_UNUSED = ^uint32(0)

// COMPRESSED_TRIANGLE_FORMAT_DGF1_BYTE_ALIGNMENT_AMDX wraps VK_COMPRESSED_TRIANGLE_FORMAT_DGF1_BYTE_ALIGNMENT_AMDX.
const COMPRESSED_TRIANGLE_FORMAT_DGF1_BYTE_ALIGNMENT_AMDX = uint32(128)

// COMPRESSED_TRIANGLE_FORMAT_DGF1_BYTE_STRIDE_AMDX wraps VK_COMPRESSED_TRIANGLE_FORMAT_DGF1_BYTE_STRIDE_AMDX.
const COMPRESSED_TRIANGLE_FORMAT_DGF1_BYTE_STRIDE_AMDX = uint32(128)

// LOD_CLAMP_NONE wraps VK_LOD_CLAMP_NONE.
const LOD_CLAMP_NONE = float32(1000.0)

// LUID_SIZE wraps VK_LUID_SIZE.
const LUID_SIZE = uint32(8)

// MAX_DESCRIPTION_SIZE wraps VK_MAX_DESCRIPTION_SIZE.
const MAX_DESCRIPTION_SIZE = uint32(256)

// MAX_DEVICE_GROUP_SIZE wraps VK_MAX_DEVICE_GROUP_SIZE.
const MAX_DEVICE_GROUP_SIZE = uint32(32)

// MAX_DRIVER_INFO_SIZE wraps VK_MAX_DRIVER_INFO_SIZE.
const MAX_DRIVER_INFO_SIZE = uint32(256)

// MAX_DRIVER_NAME_SIZE wraps VK_MAX_DRIVER_NAME_SIZE.
const MAX_DRIVER_NAME_SIZE = uint32(256)

// MAX_EXTENSION_NAME_SIZE wraps VK_MAX_EXTENSION_NAME_SIZE.
const MAX_EXTENSION_NAME_SIZE = uint32(256)

// MAX_GLOBAL_PRIORITY_SIZE wraps VK_MAX_GLOBAL_PRIORITY_SIZE.
const MAX_GLOBAL_PRIORITY_SIZE = uint32(16)

// MAX_MEMORY_HEAPS wraps VK_MAX_MEMORY_HEAPS.
const MAX_MEMORY_HEAPS = uint32(16)

// MAX_MEMORY_TYPES wraps VK_MAX_MEMORY_TYPES.
const MAX_MEMORY_TYPES = uint32(32)

// MAX_PHYSICAL_DEVICE_DATA_GRAPH_OPERATION_SET_NAME_SIZE_ARM wraps VK_MAX_PHYSICAL_DEVICE_DATA_GRAPH_OPERATION_SET_NAME_SIZE_ARM.
const MAX_PHYSICAL_DEVICE_DATA_GRAPH_OPERATION_SET_NAME_SIZE_ARM = uint32(128)

// MAX_PHYSICAL_DEVICE_NAME_SIZE wraps VK_MAX_PHYSICAL_DEVICE_NAME_SIZE.
const MAX_PHYSICAL_DEVICE_NAME_SIZE = uint32(256)

// MAX_PIPELINE_BINARY_KEY_SIZE_KHR wraps VK_MAX_PIPELINE_BINARY_KEY_SIZE_KHR.
const MAX_PIPELINE_BINARY_KEY_SIZE_KHR = uint32(32)

// MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT wraps VK_MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT.
const MAX_SHADER_MODULE_IDENTIFIER_SIZE_EXT = uint32(32)

// MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR wraps VK_MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR.
const MAX_VIDEO_AV1_REFERENCES_PER_FRAME_KHR = uint32(7)

// MAX_VIDEO_VP9_REFERENCES_PER_FRAME_KHR wraps VK_MAX_VIDEO_VP9_REFERENCES_PER_FRAME_KHR.
const MAX_VIDEO_VP9_REFERENCES_PER_FRAME_KHR = uint32(3)

// PARTITIONED_ACCELERATION_STRUCTURE_PARTITION_INDEX_GLOBAL_NV wraps VK_PARTITIONED_ACCELERATION_STRUCTURE_PARTITION_INDEX_GLOBAL_NV.
const PARTITIONED_ACCELERATION_STRUCTURE_PARTITION_INDEX_GLOBAL_NV = ^uint32(0)

// QUEUE_FAMILY_EXTERNAL wraps VK_QUEUE_FAMILY_EXTERNAL.
const QUEUE_FAMILY_EXTERNAL = ^uint32(1)

// QUEUE_FAMILY_FOREIGN_EXT wraps VK_QUEUE_FAMILY_FOREIGN_EXT.
const QUEUE_FAMILY_FOREIGN_EXT = ^uint32(2)

// QUEUE_FAMILY_IGNORED wraps VK_QUEUE_FAMILY_IGNORED.
const QUEUE_FAMILY_IGNORED = ^uint32(0)

// REMAINING_3D_SLICES_EXT wraps VK_REMAINING_3D_SLICES_EXT.
const REMAINING_3D_SLICES_EXT = ^uint32(0)

// REMAINING_ARRAY_LAYERS wraps VK_REMAINING_ARRAY_LAYERS.
const REMAINING_ARRAY_LAYERS = ^uint32(0)

// REMAINING_MIP_LEVELS wraps VK_REMAINING_MIP_LEVELS.
const REMAINING_MIP_LEVELS = ^uint32(0)

// SHADER_INDEX_UNUSED_AMDX wraps VK_SHADER_INDEX_UNUSED_AMDX.
const SHADER_INDEX_UNUSED_AMDX = ^uint32(0)

// SHADER_UNUSED_KHR wraps VK_SHADER_UNUSED_KHR.
const SHADER_UNUSED_KHR = ^uint32(0)

// SUBPASS_EXTERNAL wraps VK_SUBPASS_EXTERNAL.
const SUBPASS_EXTERNAL = ^uint32(0)

// UUID_SIZE wraps VK_UUID_SIZE.
const UUID_SIZE = uint32(16)

// WHOLE_SIZE wraps VK_WHOLE_SIZE.
const WHOLE_SIZE = ^uint64(0)
